[
  {
    "testTemplate": {
      "serviceName": "salesItemsService",
      "functionName": "createSalesItem",
      "functionArgument": {
        "price": "{{price}}",
        "userId": "{{userId}}",
        "title": "{{title}}",
        "description": "{{description}}",
        "area": "{{area}}",
        "productDepartment": "{{category}}",
        "productCategory": "{{category}}",
        "productSubCategory": "{{category}}",
        "primaryImageDataUri": "abc",
        "secondaryImageDataUris": ["abc"]
      },
      "response": {
        "statusCode": 200,
        "tests": ["pm.collectionVariables.set(\"salesItemId\", response._id)"]
      }
    },
    "tests": [
      {
        "testName": "price = 1",
        "testValueMap": {
          "price": 1.0,
          "title": "firstTitle",
          "description": "firstDescription",
          "area": "Area1",
          "category": "Vehicles"
        }
      },
      {
        "testName": "price = 2",
        "testValueMap": {
          "price": 2.0,
          "title": "secondTitle",
          "description": "secondDescription",
          "area": "Area2",
          "category": "Clothes"
        }
      }
    ]
  },
  {
    "testTemplate": {
      "serviceName": "salesItemsService",
      "functionName": "getSalesItems",
      "functionArgument": {
        "{{argumentProperty1[0]}}": "{{argumentProperty1[1]}}",
        "{{argumentProperty2[0]}}": "{{argumentProperty2[1]}}",
        "{{argumentProperty3[0]}}": "{{argumentProperty3[1]}}",
        "includeResponseFields": []
      },
      "response": {
        "statusCode": 200,
        "tests": [
          "pm.expect(response[0].{{responseProperty[0]}}).to.eql({{responseProperty[1]}});",
          "pm.expect(response.length).to.eql({{responseLength}});"
        ]
      }
    },
    "tests": [
      {
        "testName": "textFilter for title",
        "testValueMap": {
          "argumentProperty1": ["textFilter", "secondTitle"],
          "responseProperty": ["title", "'secondTitle'"],
          "responseLength": "1"
        }
      },
      {
        "testName": "textFilter for description",
        "testValueMap": {
          "argumentProperty1": ["textFilter", "secondDescription"],
          "responseProperty": ["description", "'secondDescription'"],
          "responseLength": "1"
        }
      },
      {
        "testName": "areas contains Area2",
        "testValueMap": {
          "argumentProperty1": ["areas", ["Area2"]],
          "responseProperty": ["area", "'Area2'"],
          "responseLength": "1"
        }
      },
      {
        "testName": "productDepartments contains 'Clothes'",
        "testValueMap": {
          "argumentProperty1": ["productDepartments", ["Clothes"]],
          "responseProperty": ["productDepartment", "'Clothes'"],
          "responseLength": "1"
        }
      },
      {
        "testName": "productCategories contains 'Clothes'",
        "testValueMap": {
          "argumentProperty1": ["productCategories", ["Clothes"]],
          "responseProperty": ["productCategory", "'Clothes'"],
          "responseLength": "1"
        }
      },
      {
        "testName": "productSubCategories contains 'Clothes'",
        "testValueMap": {
          "argumentProperty1": ["productSubCategories", ["Clothes"]],
          "responseProperty": ["productSubCategory", "'Clothes'"],
          "responseLength": "1"
        }
      },
      {
        "testName": "price is between minPrice and maxPrice",
        "testValueMap": {
          "argumentProperty1": ["minPrice", 2],
          "argumentProperty2": ["maxPrice", 2],
          "responseProperty": ["price", "2"],
          "responseLength": "1"
        }
      },
      {
        "testName": "sorting",
        "testValueMap": {
          "argumentProperty1": ["sortBys", [{ "sortField": "price", "sortDirection": "DESC" }]],
          "responseProperty": ["price", "2"],
          "responseLength": "2"
        }
      },
      {
        "testName": "paging",
        "testValueMap": {
          "argumentProperty1": ["pageNumber", 2],
          "argumentProperty2": ["pageSize", 1],
          "argumentProperty3": ["sortBys", [{ "sortField": "price", "sortDirection": "DESC" }]],
          "responseProperty": ["price", "1"],
          "responseLength": "1"
        }
      }
    ]
  }
]
