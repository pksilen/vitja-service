[
  {
    "templateValues": [
      {
        "argumentPropertyValues": [1.0, "firstTitle", "firstDescription", "Area1", "Vehicles"]
      },
      {
        "argumentPropertyValues": [2.0, "secondTitle", "secondDescription", "Area2", "Clothes"]
      }
    ],
    "testName": "salesItemsService.createSalesItem ({{argumentPropertyValues[0]}})",
    "serviceName": "salesItemsService",
    "functionName": "createSalesItem",
    "argument": {
      "price": "{{argumentPropertyValues[0]}}",
      "previousPrice": "{{argumentPropertyValues[0]}}",
      "userId": "{{userId}}",
      "title": "{{argumentPropertyValues[1]}}",
      "description": "{{argumentPropertyValues[2]}}",
      "area": "{{argumentPropertyValues[3]}}",
      "productDepartment": "{{argumentPropertyValues[4]}}",
      "productCategory": "{{argumentPropertyValues[4]}}",
      "productSubCategory": "{{argumentPropertyValues[4]}}",
      "primaryImageDataUri": "abc",
      "secondaryImageDataUris": ["abc"]
    },
    "response": {
      "statusCode": 200
    }
  },
  {
    "templateValues": [
      {
        "argumentPropertyNames": ["textFilter"],
        "argumentPropertyValues": ["secondTitle"],
        "responsePropertyNames": ["title"],
        "responsePropertyValues": ["'secondTitle'"]
      },
      {
        "argumentPropertyNames": ["textFilter"],
        "argumentPropertyValues": ["secondDescription"],
        "responsePropertyNames": ["description"],
        "responsePropertyValues": ["'secondDescription'"]
      },
      {
        "argumentPropertyNames": ["areas"],
        "argumentPropertyValues": [["Area2"]],
        "responsePropertyNames": ["area"],
        "responsePropertyValues": ["'Area2'"]
      },
      {
        "argumentPropertyNames": ["productDepartments"],
        "argumentPropertyValues": [["Clothes"]],
        "responsePropertyNames": ["productDepartment"],
        "responsePropertyValues": ["'Clothes'"]
      },
      {
        "argumentPropertyNames": ["productCategories"],
        "argumentPropertyValues": [["Clothes"]],
        "responsePropertyNames": ["productCategory"],
        "responsePropertyValues": ["'Clothes'"]
      },
      {
        "argumentPropertyNames": ["productSubCategories"],
        "argumentPropertyValues": [["Clothes"]],
        "responsePropertyNames": ["productSubCategory"],
        "responsePropertyValues": ["'Clothes'"]
      }
    ],
    "testName": "salesItemsService.getSalesItems ({{argumentPropertyNames[0]}} = {{argumentPropertyValues[0]}})",
    "serviceName": "salesItemsService",
    "functionName": "getSalesItems",
    "argument": {
      "{{argumentPropertyNames[0]}}": "{{argumentPropertyValues[0]}}",
      "includeResponseFields": []
    },
    "response": {
      "statusCode": 200,
      "tests": [
        {
          "name": "{{responsePropertyNames[0]}} is {{responsePropertyValues[0]}}",
          "exec": [
            "pm.expect(response[0].{{responsePropertyNames[0]}}).to.eql({{responsePropertyValues[0]}});",
            "pm.expect(response.length).to.eql(1);"
          ]
        }
      ]
    }
  },
  {
    "testName": "salesItemsService.getSalesItems (minPrice, maxPrice)",
    "serviceName": "salesItemsService",
    "functionName": "getSalesItems",
    "argument": {
      "minPrice": 2,
      "maxPrice": 2,
      "includeResponseFields": []
    },
    "response": {
      "statusCode": 200,
      "tests": [
        {
          "name": "price is 2",
          "exec": ["pm.expect(response[0].price).to.eql(2.00);", "pm.expect(response.length).to.eql(1);"]
        }
      ]
    }
  },
  {
    "testName": "salesItemsService.getSalesItems (sortBy, sortDirection)",
    "serviceName": "salesItemsService",
    "functionName": "getSalesItems",
    "argument": {
      "sortBy": "price",
      "sortDirection": "DESC",
      "includeResponseFields": []
    },
    "response": {
      "statusCode": 200,
      "tests": [
        {
          "name": "first price is 2 and second price is 1",
          "exec": [
            "pm.expect(response[0].price).to.eql(2.00);",
            "pm.expect(response[1].price).to.eql(1.00);",
            "pm.expect(response.length).to.eql(2);"
          ]
        }
      ]
    }
  },
  {
    "testName": "salesItemsService.getSalesItems (pageNumber, pageSize)",
    "serviceName": "salesItemsService",
    "functionName": "getSalesItems",
    "argument": {
      "pageNumber": 2,
      "pageSize": 1,
      "includeResponseFields": []
    },
    "response": {
      "statusCode": 200,
      "tests": [
        {
          "name": "price is 2",
          "exec": ["pm.expect(response[0].price).to.eql(2.00);", "pm.expect(response.length).to.eql(1);"]
        }
      ]
    }
  }
]
